{
  "name": "edocteel001",
  "version": "1.0.0",
  "description": "100 Days Leetcode\r ### day1--141\r 开始刷题了，今天刷了一道，还算简单，明天准备完成第698题.\r ### day2--698\r 我对递归还是理解的不深刻，这题看答案了，还照着敲了一点，再做几道递归的题，再回来做day2这个--698\r ### day3--795, 70\r 1. 最后这题在网上的参考下用动态规划完成了，其实还是彻底懂，需要先刷两道动态规划的简单题, 再回来把这题重新做一遍，再看看自己能O(1)搞定么。\r 2. 上楼梯问题自己完成了，理解了一点\r ### day3--11\r 1. 这道题非常郁闷，想到了前后双指针，但是没考虑到最简单的情况。\r ### day4--46\r 1. 用自己的思路做出来了，真的花了很久，不过对递归的理解深刻了很多。明天把算法优化下吧\r ### day5--83\r 1. 今天搞了个简单的，理解了一些链表，明天争取做19, 但是要先干工作。\r ### day6--19\r 1. 又是链表，完全自己独立完成的第一道中等题，题目大概只花了15分钟，但是边界问题花了30分钟。惭愧。\r ### day7--2, 56, 78\r 1. 太晚了，这个题看答案了，其实能做出来的，好处是对链表的理解深刻了一点点。从第一次知道leetcode一年多了，我终于把第一次打开leetcode然后懵逼的第二题给做了。\r 2. 第一道独立完成的排序题搞定，花了不算长的时间。但是效率好像低了点儿，看看答案啥好方法。（js的最佳答案和我思路差不多，显然我的效率低了一点点）\r 3. 78搞定，又一道全排列相关的题，这题花了好久还遇到了JS一个坑。在js中 [1] in [[1], [2]] 无论是indexof还是includes都为false\r 4. 27这个题出的好烂，怪不得那么多dislike。今天完成了4道，略牛逼啊，之后需要把之前没通过的先完成（好像只剩下第五题了）\r ### day8--5, 4\r 1. 这个题独立用n * n * n 搞定了，看了答案，了解到了还能用动态规划和[马拉车算法](https://www.zhihu.com/question/30226229), 算法还没彻底搞懂，但找到了个[视频动画网站](http://manacher-viz.s3-website-us-east-1.amazonaws.com/#/)也太牛逼了吧。这道题做完，之前没过的题都算完成了，该刷新的题了。\r 2. 第4题是我的第一道hard题，完全自己独立思考，估计很少有人我这种做法吧？时间和空间复杂度居然都不错，还用到了js的一些技巧，我真是惊了。有点兴奋啊。\r ### day9--215, 412\r 1. 这道题超级快的解决了，用了js的数据结构，有偷懒的嫌疑啊。把这道题加入之后的To Do吧\r 2. 做了道FizzBuzz哈哈，其实这题要是想解的好还是会用到一些技巧的。。。",
  "main": "11.container-with-most-water.js",
  "dependencies": {},
  "devDependencies": {
    "eslint": "^6.6.0",
    "eslint-config-airbnb-base": "^14.0.0",
    "eslint-plugin-import": "^2.18.2"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yihong0618/edocteel001.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/yihong0618/edocteel001/issues"
  },
  "homepage": "https://github.com/yihong0618/edocteel001#readme"
}
